apiVersion: apps/v1
kind: Deployment
metadata:
  name: orderer-org1-scray-org
  labels:
    app: orderer-org1-scray-org
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orderer-org1-scray-org
  template:
    metadata:
      labels:
        app: orderer-org1-scray-org
    spec:
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "orderer.example.com"
      containers:
        - name: orderer
          image: hyperledger/fabric-orderer:2.2.1
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric
          env:
            - name: FABRIC_LOGGING_SPEC
              value: "DEBUG"
            - name: ORDERER_GENERAL_LISTENADDRESS
              value: "0.0.0.0"
            - name: ORDERER_GENERAL_LISTENPORT
              value: "30081"
            - name: ORDERER_GENERAL_GENESISMETHOD
              value: "file"
            - name: ORDERER_GENERAL_GENESISFILE
              value: "/var/hyperledger/orderer/orderer.genesis.block"
            - name: ORDERER_GENERAL_LOCALMSPDIR
              value: "/var/hyperledger/orderer/msp"
            - name: ORDERER_GENERAL_LOCALMSPID # Fixme
              value: "OrdererMSP"
              #valueFrom:
              #  configMapKeyRef:
              #    name: hl-fabric-orderer
              #    key: ORDERER_GENERAL_LOCALMSPID
            - name: ORDERER_GENERAL_TLS_ENABLED
              value: "true"
            - name: ORDERER_GENERAL_TLS_PRIVATEKEY
              value: "/var/hyperledger/orderer/tls/server.key"
            - name: ORDERER_GENERAL_TLS_CERTIFICATE
              value: "/var/hyperledger/orderer/tls/server.crt"
            - name: ORDERER_GENERAL_TLS_ROOTCAS
              value: "[/var/hyperledger/orderer/tls/ca.crt]"
            - name: ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR
              value: "1"           
            - name: ORDERER_KAFKA_VERBOSE
              value: "true"
            - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
              value: "/var/hyperledger/orderer/tls/server.crt"
            - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
              value: "/var/hyperledger/orderer/tls/server.key"
            - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
              value: "[/var/hyperledger/orderer/tls/ca.crt]"
            - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
              value: "/var/hyperledger/orderer/tls/server.crt"
            - name: CONFIGTX_ORDERER_ADDRESSES
          volumeMounts:
            - name: orderer-conf
              mountPath: /var/hyperledger/orderer/orderer.genesis.block
              subPath: conf/orderer/system-genesis-block/genesis.block
            - name: orderer-conf
              mountPath: /var/hyperledger/orderer/msp
              subPath: conf/orderer/msp
            - name: orderer-conf
              mountPath: /var/hyperledger/orderer/tls
              subPath: conf/orderer/tls
        - name: scray-orderer-cli
          stdin: true
          tty: true
          image: hyperledger/fabric-tools:2.2.1
          command: ["/bin/bash"]
          env:
            - name: CORE_VM_ENDPOINT
              value: "unix:///host/var/run/docker.sock"
            - name: GOPATH
              value: "/opt/gopath"
            - name: CORE_PEER_TLS_ENABLED
              value: "true"
            - name: CORE_PEER_TLS_CERT_FILE
              value: "/etc/hyperledger/fabric/tls/server.crt"
            - name: CORE_PEER_TLS_KEY_FILE
              value: "/etc/hyperledger/fabric/tls/server.key"
            - name: CORE_PEER_TLS_ROOTCERT_FILE
              value: "/etc/hyperledger/fabric/tls/ca.crt"
            - name: CORE_PEER_MSPCONFIGPATH
              value: "/mnt/conf/msp/"
            - name: HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-orderer
                  key: hostname
            - name: ORG_NAME
              value: "orderer" # Fixme Add env var
          volumeMounts:
            - name: orderer-conf
              mountPath: /mnt
            - name: orderer-conf 
              mountPath: /etc/hyperledger/fabric/msp
              subPath: conf/orderer/msp
            - name: orderer-conf 
              mountPath: /etc/hyperledger/fabric/tls
              subPath: conf/orderer/tls
            - name: orderer-conf 
              mountPath: /var/hyperledger/orderer/orderer.genesis.block
              subPath: conf/orderer/system-genesis-block/genesis.block 
            - name: orderer-conf 
              mountPath: /var/hyperledger/production
            - name: orderer-conf
              mountPath: /tmp/ca.adminorg.fabric.hyperledger.projects.scray.org-cert.pem
              subPath: conf/admin/organizations/peerOrganizations/adminorg.fabric.hyperledger.projects.scray.org/ca/ca.adminorg.fabric.hyperledger.projects.scray.org-cert.pem
      initContainers:
        - name: cert-creator
          image: scrayorg/hl-fabric-node-configurator:1.1
          imagePullPolicy: Always
          env:
            - name: HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-orderer
                  key: hostname
            - name: ORG_NAME
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-orderer
                  key: org_name
            - name: NODE_TYPE
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-orderer
                  key: NODE_TYPE
                  # command: ['/bin/sh', '-c']
          # args: ['cd /mnt/hl-fabric-conf/ && wget https://mft.seeburger.de:443/portal-seefx/~public/ZDEwZTlmMTEtYjg2NC00NWVlLWE1YWEtNWI2OGZhM2NjMDg2?download -O config.zip &&  unzip config.zip']
          volumeMounts:
            - name: orderer-conf
              mountPath: /mnt/peer-conf/
      volumes:
        - name: orderer-conf
          emptyDir: {}
        - name: orderer-data
          emptyDir: {}
