apiVersion: apps/v1
kind: Deployment
metadata:
  name: peer0-org1-scray-org
  labels:
    app: peer0-org1-scray-org
spec:
  replicas: 1
  selector:
    matchLabels:
      app: peer0-org1-scray-org
  template:
    metadata:
      labels:
        app: peer0-org1-scray-org
    spec:
      containers:
        - name: peer0-org1-scray-org
          image: hyperledger/fabric-peer:2.2.1
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
          env:
            - name: FABRIC_LOGGING_SPEC
              value: "DEBUG"
            - name: CORE_VM_ENDPOINT
              value: "unix:///host/var/run/docker.sock"
            - name: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE
              value: "${COMPOSE_PROJECT_NAME}_test"
            - name: CORE_PEER_TLS_ENABLED
              value: "true"
            - name: CORE_PEER_PROFILE_ENABLED
              value: "true"
            - name: CORE_PEER_TLS_CERT_FILE
              value: "/etc/hyperledger/fabric/tls/server.crt"
            - name: CORE_PEER_TLS_KEY_FILE
              value: "/etc/hyperledger/fabric/tls/server.key"
            - name: CORE_PEER_TLS_ROOTCERT_FILE
              value: "/etc/hyperledger/fabric/tls/ca.crt"
            - name: CORE_PEER_ID
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-peer
                  key: hostname
            - name: CORE_PEER_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-peer
                  key: CORE_PEER_ADDRESS
            - name: CORE_PEER_LISTENADDRESS
              value: "0.0.0.0:7051"
            - name: CORE_PEER_CHAINCODEADDRESS
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-peer
                  key: CORE_PEER_ADDRESS
            - name: CORE_PEER_CHAINCODELISTENADDRESS
              value: "0.0.0.0:30002"
            - name: CORE_PEER_GOSSIP_BOOTSTRAP
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-peer
                  key: CORE_PEER_GOSSIP_EXTERNALENDPOINT
            - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-peer
                  key: CORE_PEER_GOSSIP_EXTERNALENDPOINT
            - name: CORE_PEER_LOCALMSPID
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-peer
                  key: CORE_PEER_LOCALMSPID
          volumeMounts:
            - name: peer-conf
              mountPath: /etc/hyperledger/fabric/msp
              subPath: conf/msp
            - name: peer-conf
              mountPath: /etc/hyperledger/fabric/tls
              subPath: conf/tls
            - name: peer-conf
              mountPath: /etc/hyperledger/fabric/core.yaml
              subPath: conf/core.yaml
            - name: peer-conf
              mountPath: /opt/scray/hl-fabric/external_builders
              subPath: conf/external_builders
            - name: peer0-data
              mountPath: /var/hyperledger/production
            - mountPath: /host/var/run/docker.sock
              name: dockersocket
        - name: scray-peer-cli
          stdin: true
          tty: true
          image: hyperledger/fabric-tools:2.2.1
          command: ["/bin/bash"]
          env:
            - name: CORE_VM_ENDPOINT
              value: "unix:///host/var/run/docker.sock"
            - name: GOPATH
              value: "/opt/gopath"
            - name: CORE_PEER_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-peer
                  key: CORE_PEER_ADDRESS
            - name: CORE_PEER_LOCALMSPID
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-peer
                  key: CORE_PEER_LOCALMSPID
            - name: CORE_PEER_TLS_ENABLED
              value: "true"
            - name: CORE_PEER_TLS_CERT_FILE
              value: "/etc/hyperledger/fabric/tls/server.crt"
            - name: CORE_PEER_TLS_KEY_FILE
              value: "/etc/hyperledger/fabric/tls/server.key"
            - name: CORE_PEER_TLS_ROOTCERT_FILE
              value: "/etc/hyperledger/fabric/tls/ca.crt"
            - name: CORE_PEER_MSPCONFIGPATH
              value: "/mnt/conf/msp/"
            - name: HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-peer
                  key: hostname
            - name: ORG_NAME
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-peer
                  key: org_name
          volumeMounts:
            - name: peer-conf
              mountPath: /mnt
            - name: peer-conf
              mountPath: /etc/hyperledger/fabric/msp
              subPath: conf/msp
            - name: peer-conf
              mountPath: /etc/hyperledger/fabric/tls
              subPath: conf/tls
            - name: peer0-data
              mountPath: /var/hyperledger/production
            - mountPath: /host/var/run/docker.sock
              name: dockersocket
      initContainers:
        - name: cert-creator
          image: scrayorg/hl-fabric-node-configurator:1.1
          imagePullPolicy: Always
          env:
            - name: NODE_TYPE
              value: "peer"
            - name: HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-peer
                  key: hostname
            - name: ORG_NAME
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-peer
                  key: org_name
            - name: DATA_SHARE
              valueFrom:
                configMapKeyRef:
                  name: hl-fabric-peer
                  key: data_share     
                  
          # command: ['/bin/sh', '-c']
          # args: ['cd /mnt/hl-fabric-conf/ && wget https://mft.seeburger.de:443/portal-seefx/~public/ZDEwZTlmMTEtYjg2NC00NWVlLWE1YWEtNWI2OGZhM2NjMDg2?download -O config.zip &&  unzip config.zip']
          volumeMounts:
            - name: peer-conf
              mountPath: /mnt/peer-conf/
      volumes:
        - name: peer-conf
          emptyDir: {}
        - name: peer0-data
          emptyDir: {}
        - name: dockersocket
          hostPath:
            path: /var/run/docker.sock
