apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose -f docker-compose-test-net.yaml -f docker-compose-couch.yaml
      -f docker-compose-ca.yaml convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: peer0-org1-example-com
  name: peer0-org1-example-com
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: peer0-org1-example-com
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose -f docker-compose-test-net.yaml -f docker-compose-couch.yaml
          -f docker-compose-ca.yaml convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/invoicehyperlederfabric_test: "true"
        io.kompose.service: peer0-org1-example-com
    spec:
      containers:
      - args:
        - peer
        - node
        - start
        env:
        - name: CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS
          value: couchdb0:5984
        - name: CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
          value: adminpw
        - name: CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME
          value: admin
        - name: CORE_LEDGER_STATE_STATEDATABASE
          value: CouchDB
        - name: CORE_PEER_ADDRESS
          value: peer0.org1.example.com:7051
        - name: CORE_PEER_CHAINCODEADDRESS
          value: peer0.org1.example.com:7052
        - name: CORE_PEER_CHAINCODELISTENADDRESS
          value: 0.0.0.0:7052
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: peer0.org1.example.com:7051
        - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
          value: peer0.org1.example.com:7051
        - name: CORE_PEER_ID
          value: peer0.org1.example.com
        - name: CORE_PEER_LISTENADDRESS
          value: 0.0.0.0:7051
        - name: CORE_PEER_LOCALMSPID
          value: Org1MSP
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_PEER_TLS_CERT_FILE
          value: /etc/hyperledger/fabric/tls/server.crt
        - name: CORE_PEER_TLS_ENABLED
          value: "true"
        - name: CORE_PEER_TLS_KEY_FILE
          value: /etc/hyperledger/fabric/tls/server.key
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: /etc/hyperledger/fabric/tls/ca.crt
        - name: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE
          value: invoice-hyperleder-fabric_test
        - name: CORE_VM_ENDPOINT
          value: unix:///host/var/run/docker.sock
        - name: FABRIC_LOGGING_SPEC
          value: INFO
        image: hyperledger/fabric-peer:latest
        imagePullPolicy: ""
        name: peer0.org1.example.com
        ports:
        - containerPort: 7051
        resources: {}
        volumeMounts:
        - mountPath: /host/var/run/
          name: peer0-org1-example-com-claim0
        - mountPath: /etc/hyperledger/fabric/msp
          name: peer0-org1-example-com-claim1
        - mountPath: /etc/hyperledger/fabric/tls
          name: peer0-org1-example-com-claim2
        - mountPath: /var/hyperledger/production
          name: peer0.org1.example.com
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: peer0-org1-example-com-claim0
        persistentVolumeClaim:
          claimName: peer0-org1-example-com-claim0
      - name: peer0-org1-example-com-claim1
        persistentVolumeClaim:
          claimName: peer0-org1-example-com-claim1
      - name: peer0-org1-example-com-claim2
        persistentVolumeClaim:
          claimName: peer0-org1-example-com-claim2
      - name: peer0.org1.example.com
        persistentVolumeClaim:
          claimName: peer0.org1.example.com
status: {}
